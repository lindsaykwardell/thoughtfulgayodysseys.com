---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Signature from "@/components/Signature.astro";
---

<BaseLayout>
  <section class="w-full z-20">
    <div class="mx-auto max-w-7xl">
      <div class="text-center pt-20 pb-10 z-30 relative">
        <h1
          class="text-4xl tracking-tight text-balance font-medium font-display text-black md:text-8xl"
        >
          Thoughtful Gay Oddysseys
        </h1>
      </div>
    </div>
  </section>

  <div
    class="flex flex-col-reverse lg:flex-row lg:justify-center p-6 items-center gap-12 lg:gap-0"
  >
    <section
      id="poem"
      class="text-lg font-extralight min-w-[350px] lg:w-1/3 italic"
    >
      <div class="circle"></div>
      <p>I lean into this unknown ether</p>

      <p>palms cupped around sweating truths</p>

      <p>breath unstrung</p>

      <p>Listening to the howl inside my ribs,</p>

      <p>I say to myself, "I am scared,"</p>

      <p>and, "I am alive."</p>

      <p>Perhaps that is enough.</p>
    </section>
    <div class="lg:w-2/3">
      <Signature>
        <div class="flex justify-center text-lg">
          <a class="underline" href="/posts">View Posts</a>
        </div>
      </Signature>
    </div>
  </div>
  <!-- <Cta /> -->

  <script>
    // const elementsToLoadIn = document.querySelectorAll("#poem p");
    // const posts = document.querySelector("#posts");

    // elementsToLoadIn.forEach((el) => {
    //  el.classList.add('loadin');
    // });

    // const observerOptions = {
    //   root: null,
    //   rootMargin: "0px",
    //   threshold: 1,
    // };

    // function observerCallback(entries) {
    //   entries.forEach((entry) => {
    //     if (entry.isIntersecting) {
    //       entry.target.classList.add("loaded");
    //     }
    //   });
    // }

    // const observer = new IntersectionObserver(observerCallback, observerOptions);

    // setTimeout(() => {
    //   elementsToLoadIn.forEach((el) => observer.observe(el));
    //   observer.observe(posts);
    // }, 500);
  </script>

  <style scoped>
    #poem {
      .circle {
        width: 300px;
        height: 224px;
        float: right;
        shape-outside: ellipse(157px 102px at 134.67% 50.19%);
      }

      text-align: right;
    }
    /*  #poem {
    p {
      opacity: 0;
      transform: translateY(45px);
      transition:
        transform 1s,
        opacity 0.9s;

      &.loaded {
        opacity: 1;
        transform: translateY(0);
        transition-delay: 0s;
      }
    }
  }*/
  </style>
</BaseLayout>
