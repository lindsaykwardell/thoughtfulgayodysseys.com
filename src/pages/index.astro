---
import BaseLayout from "@/layouts/BaseLayout.astro";
import EntriesOne from "@/components/entries/EntriesOne.astro";
import Hero from "@/components/landing/Hero.astro";
import Cta from "@/components/global/Cta.astro";
import { ISbRichtext, useStoryblokApi } from "@storyblok/astro";

const storyblokApi = useStoryblokApi();

type Post = {
  name: string;
  created_at: string;
  published_at: string;
  id: number;
  uuid: string;
  content: {
    _uid: string;
    tags: string[];
    content: ISbRichtext;
    summary: string;
    component: "post";
    sideImage: {
      id: number;
      filename: string;
    };
    coverImage: {
      id: number;
      filename: string;
    };
  };
  slug: string;
  full_slug: string;
};

const {
  data,
}: {
  data: {
    stories: Post[];
  };
} = await storyblokApi.get("cdn/stories", {
  version: import.meta.env.STORYBLOK_MODE,
});

// Sort posts by date in descending order (newest first)
const postsByYear = data.stories
  .toSorted(
    (a, b) =>
      new Date(b.published_at ?? b.created_at).getTime() - new Date(a.published_at ?? a.created_at).getTime()
  )
  .reduce(
    (byYear, post) => {
      const year = new Date(post.published_at ?? post.created_at).getFullYear().toString();
      if (!byYear[year]) {
        byYear[year] = [];
      }

      byYear[year].push(post);

      return byYear;
    },
    {} as { [key: string]: Post[] }
  );
---

<BaseLayout>
  <Hero />
  <ul class="pb-7 max-w-[1000px] m-auto">
    {Object.entries(postsByYear).toSorted((a,b) => +b[0] - +a[0]).map(([year, posts]) => (
        <li transition:name={year} class="font-title text-2xl text-stone-400 py-8 pl-8">{year}</li>
        <ul class="flex flex-col gap-7 lg:gap-2 px-2 md:px-0">
            {posts.map(post => (
                <li transition:name={`${post.slug}-name`} class="text-lg md:text-xl grid grid-cols-2 lg:grid-cols-8 gap-2 lg:gap-7 items-center">
                    <a href={`/posts/${post.slug}`} class="col-span-2 lg:col-span-6 hover:underline">{post.name}</a>
                    <time class="text-sm text-stone-400">{Intl.DateTimeFormat('en-us').format(new Date(post.published_at ?? post.created_at))}</time>
                    {post.content.tags.length > 0 && <span class={`rounded-lg bg-stone-200 text-stone-600 text-sm px-2 py-1 text-center`}>{post.content.tags[0]}</span>}
                </li>
            ))}
        </ul>
    ))}
</ul>
  <!-- <Cta /> -->
</BaseLayout>
