---
import PostCard from "@/components/PostCard.astro";
import Signature from "@/components/Signature.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { ISbRichtext, useStoryblokApi } from "@storyblok/astro";

const storyblokApi = useStoryblokApi();

type Post = {
  name: string;
  created_at: string;
  published_at: string;
  first_published_at: string;
  id: number;
  uuid: string;
  content: {
    _uid: string;
    tags: string[];
    content: ISbRichtext;
    summary: string;
    component: "post";
    sideImage: {
      id: number;
      filename: string;
    };
    coverImage: {
      id: number;
      filename: string;
    };
  };
  slug: string;
  full_slug: string;
};

const data: Post[] = await storyblokApi.getAll("cdn/stories", {
  version: import.meta.env.STORYBLOK_MODE,
});

// Sort posts by date in descending order (newest first)
const postsByYear = data
  .toSorted(
    (a, b) =>
      new Date(b.first_published_at ?? b.created_at).getTime() - new Date(a.first_published_at ?? a.created_at).getTime()
  )
  .reduce(
    (byYear, post) => {
      if (post.content.tags?.length > 0) {
        return byYear;
      }
      const year = new Date(post.first_published_at ?? post.created_at).getFullYear().toString();
      if (!byYear[year]) {
        byYear[year] = [];
      }

      // Get the count of posts using the name of this post as a tag.
      const posts = data.filter((p) => p.content.tags?.includes(post.name));

      byYear[year].push({
        ...post,
        posts: posts.length,
      });

      return byYear;
    },
    {} as { [key: string]: (Post & {
      posts: number;
    })[] }
  );
---

<BaseLayout>
  <ul id="posts" class="w-full max-w-[1400px] m-auto">
    {Object.entries(postsByYear).toSorted((a,b) => +b[0] - +a[0]).map(([year, posts]) => (
        <li transition:name={year} class="font-title text-2xl text-stone-800 py-8 pl-8">{year}</li>
        <ul class="flex flex-row flex-wrap">
            {posts.map(post => (
                <li transition:name={`${post.slug}-name`} class="text-lg md:text-xl w-full md:w-1/2 xl:w-1/3">
                    <div class="p-2">
                      <PostCard img={post.content.coverImage?.filename} url={`/posts/${post.slug}`}>
                        <div slot="title" class="flex items-end">
                          <div class="flex-grow flex items-end gap-3">
                            <h3 class="font-display">{post.name}</h3>
                            {post.posts >= 1 && (
                              <div class="text-sm text-stone-800">{post.posts} {post.posts === 1 ? 'post' : 'posts'}</div>
                            )}
                          </div>
                          <time class="text-sm text-stone-800">{Intl.DateTimeFormat('en-us').format(new Date(post.first_published_at ?? post.created_at))}</time>
                        </div>
                      </PostCard>
                    </div>
                </li>
            ))}
        </ul>
    ))}
  </ul>
  <Signature avatarSize="md" />
</BaseLayout>

<style scoped>
#poem {
  p {
  opacity: 0;
  transform: translateY(45px);
  transition: transform 1s, opacity 0.9s;

  &.loaded {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0s;
  }
}
}
</style>