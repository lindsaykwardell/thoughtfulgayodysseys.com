---
import Signature from "@/components/Signature.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { ISbRichtext, useStoryblokApi } from "@storyblok/astro";

const storyblokApi = useStoryblokApi();

type Post = {
  name: string;
  created_at: string;
  published_at: string;
  first_published_at: string;
  id: number;
  uuid: string;
  content: {
    _uid: string;
    tags: string[];
    content: ISbRichtext;
    summary: string;
    component: "post";
    sideImage: {
      id: number;
      filename: string;
    };
    coverImage: {
      id: number;
      filename: string;
    };
  };
  slug: string;
  full_slug: string;
};

const data: Post[] = await storyblokApi.getAll("cdn/stories", {
  version: import.meta.env.STORYBLOK_MODE,
});

// Sort posts by date in descending order (newest first)
const postsByYear = data
  .toSorted(
    (a, b) =>
      new Date(b.first_published_at ?? b.created_at).getTime() - new Date(a.first_published_at ?? a.created_at).getTime()
  )
  .reduce(
    (byYear, post) => {
      const year = new Date(post.first_published_at ?? post.created_at).getFullYear().toString();
      if (!byYear[year]) {
        byYear[year] = [];
      }

      byYear[year].push(post);

      return byYear;
    },
    {} as { [key: string]: Post[] }
  );
---

<BaseLayout>
  <ul id="posts" class=" max-w-[1000px] m-auto">
    {Object.entries(postsByYear).toSorted((a,b) => +b[0] - +a[0]).map(([year, posts]) => (
        <li transition:name={year} class="font-title text-2xl text-stone-800 py-8 pl-8">{year}</li>
        <ul class="flex flex-col gap-7 lg:gap-2 px-2 md:px-0">
            {posts.map(post => (
                <li transition:name={`${post.slug}-name`} class="text-lg md:text-xl grid grid-cols-2 lg:grid-cols-8 gap-2 lg:gap-7 items-center">
                    <a href={`/posts/${post.slug}`} class="col-span-2 lg:col-span-6 hover:underline">{post.name}</a>
                    <time class="text-sm text-stone-800">{Intl.DateTimeFormat('en-us').format(new Date(post.first_published_at ?? post.created_at))}</time>
                    {post.content.tags?.length > 0 && <a href={`/posts/${post.content.tags[0].toLowerCase()}`} class={`rounded-lg bg-[#F56438] text-stone-950 text-sm px-2 py-1 text-center`}>{post.content.tags[0]}</a>}
                </li>
            ))}
        </ul>
    ))}
</ul>
  <Signature avatarSize="md" />
</BaseLayout>

<style scoped>
#poem {
  p {
  opacity: 0;
  transform: translateY(45px);
  transition: transform 1s, opacity 0.9s;

  &.loaded {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0s;
  }
}
}
</style>